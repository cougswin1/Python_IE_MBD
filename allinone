
f = open("/users/jordansorensen/anaconda3/PythonAssignment/StudentFile-2.txt","r")

recall = ""
dir = {}
for i in f:
    line = i.partition('*')
    if "," in line[0]:
        name = line[0]
        temp = line[2].partition("*")
        student_id = temp[0]
        email=temp[2].rstrip("\n")
        dir[student_id] = [name,email,student_id]
        recall = student_id
        dir[student_id].append({"classes":{}})
    else:
        course = line[0]
        grade = line[2].rstrip("\n")
        dir[recall][3]["classes"][course] = grade


class module:
    
    def __init__(self, sm):
        self.sm = sm
        
    def averageStudent(self,idIE):
        s = self.getStudent(idIE)
        grades = s.getGrades()
        total = 0
        for grade in grades:
            total+=float(grades[grade])
        return total/len(grades)
        
    def averageCourse(self,course):
        st = self.getStudents()
        total = 0
        index = 0
        for student in dir:
            s = st[student]
            grades = s.getGrades()
            if course in grades:
                total += float(grades[course])
                index += 1
        result = total(index)
        if index == 0:
            result = -1
        return result
        
    def averageAll(self):
        st = self.sm.getStudents()
        total = 0
        for student in st:
            s = st[student]
            idIE = s.getID()
            total += self.averageStudent(idIE)
        return total/len(st)
        
    def loadStudent(self,idIE,student):
        self.students[idIE]= student

    def makeStudent(self,infoStr):
        name,idIE,email = infoStr.split("*")
        return Student(name,idIE,email)
        
    def getStudent(self,idIE):
        return(self.students[idIE])
        
    def loadStudent(self):
        infile = open(self.filename,"r")
        for line in infile:
            tokens = line.split("*")
            if(len(tokens)>2):
                s = self.makeStudent(line)
                self.loadStudent(s.idIE,s)
            else:
                s.setGrade(tokens[0],tokens[1])
                
        infile.close()
        
    def getStudents(self):
        return self.students
        
    def __init__(self,name,idIE,grades,email):
        self.name = name
        self.__idIE = idIE
        self.__grades = {}
        self.email = email
        
    def getname(self):
        return self.name
        
    def getgrade(self):
        return self.__grades
        
    def getemail(self):
        return self.email
        
    def getgrade(self,course):
        return self.__grades[course]

    def getid(self):
        return self.__idIE

    def setgrade(self,course,grade):
        self.__grades[course] = grade

    def setname(self,newname):
        self.name = newname
        
class controller1:
    
    def __init__(self,controller):
        self.controller = controller
        
    def mainloop(self):
        """
    Student Management Systerm
     
                  0-Quit
                  1-Average frade for one student
                  2-Average of the average grade of all students
                  3-Average grade for one course
"""

    choice = input("Well, what will it be?: ")
    print()

    # exit
    if choice == "0":
        print("Good-bye.")
        
    elif choice == "1":
        option = input("What student do you want me to look-up?: ")
        if option.lower() in module.getname:
            average = option[sm.lower()]
            average = module.averageStudent
            print("\n", average)
        else:
            print("\nSorry, no matches")
            
    elif choice == "2":
            print("\n", module.averageAll) #not working :/
            
